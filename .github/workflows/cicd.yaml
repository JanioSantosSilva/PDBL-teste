name: CI/CD Workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Checar name centro de Custo
      id: checar_nome
      run: |
        REPO_NAME="${{ github.repository }}"  # This will dynamically get the repository name
        
        # Extract the parts of the repository name
        IFS='/' read -r -a PARTS <<< "$REPO_NAME"
        REPO_NAME=${PARTS[1]} # Use the second part of the repository name (ignoring owner)

        echo "Extracted repository name: $REPO_NAME"
        
        if [[ ${#REPO_NAME} -eq 4 ]]; then
          FOUR_CHAR_NAME=$(echo "$REPO_NAME" | tr '-' '\n' | grep -E '^[a-zA-Z0-9]{4}$')
          echo "Nome Centro de Custo: $FOUR_CHAR_NAME"
          NOME_ENCONTRADO=$FOUR_CHAR_NAME
        fi
        
        if [[ -z "$NOME_ENCONTRADO" && "$REPO_NAME" == *"AWB"* ]]; then
           AWB_PART=$(echo $REPO_NAME | grep -o 'AWB[^/]*')
           echo "Nome contendo 'AWB' encontrado: $AWB_PART"
           NOME_ENCONTRADO=$AWB_PART
        fi

        if [[ -n "$NOME_ENCONTRADO" ]]; then
          LOWERCASE_NAME=$(echo "$NOME_ENCONTRADO" | tr '[:upper:]' '[:lower:]')
          echo "Buscando arquivo properties no repositÃ³rio com prefixo: $LOWERCASE_NAME"
          for FILE in $(find . -name "${LOWERCASE_NAME}-*.properties"); do
            echo "Arquivo encontrado: $FILE"
    
             while IFS='=' read -r key value; do
             if [[ $key == dist* ]]; then
                echo "Exporting property: ${key}=${value}"
               echo "${key}=${value}" >> $GITHUB_ENV
             fi
           done < "$FILE"
          done
      
          echo "All dist properties have been exported."
        else
         echo "Nenhum nome de centro de custo encontrado."
        fi

    - name: Extract paths from environment variables
      run: |
       for var in $(compgen -v | grep '^dist3'); do
         path=${!var}
         echo "Extracted path: $path"
       done