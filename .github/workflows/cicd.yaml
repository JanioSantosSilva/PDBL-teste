name: CI/CD Workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Extract repository name
      id: extract
      run: |
        REPO_NAME="${{ github.repository }}"
        # Usa expressão regular para encontrar nomes com 4 caracteres antes ou depois do "if"
        if [[ $REPO_NAME =~ ([a-zA-Z0-9]{4}) ]]; then
          echo "Found 4-character name before 'if': ${BASH_REMATCH[1]}"
        fi
        if [[ $REPO_NAME =~ if\ ([a-zA-Z0-9]{4}) ]]; then
          echo "Found 4-character name after 'if': ${BASH_REMATCH[1]}"
        fi
        
    - name: Output result
      run: |
        echo "Repository name: ${{ github.repository }}"
        echo "Extracted name: ${{ steps.extract.outputs.name }}"

    - name: Extract 4-character name from repository
      id: extract-name
      shell: bash
      run: |
        # Inicializa a variável SHORT_REPO_NAME como vazia
        SHORT_REPO_NAME=""
    
        # Define um array de padrões de regex para tentar capturar a sequência de 4 caracteres
        patterns=(
          '[a-zA-Z0-9]{4}(?=-)'        # 4 caracteres antes do hífen
          '[a-zA-Z0-9]{4}$'            # 4 caracteres após o último hífen
          '[a-zA-Z0-9]{4}(?=-[^-]*$)'  # 4 caracteres após o segundo hífen
        )
    
        # Itera sobre os padrões e tenta capturar a sequência de 4 caracteres
        for pattern in "${patterns[@]}"; do
          echo "Testing pattern: $pattern"
          SHORT_REPO_NAME=$(basename $GITHUB_REPOSITORY | grep -oE "$pattern" | head -n 1)
          echo "Captured value: $SHORT_REPO_NAME"
          if [ -n "$SHORT_REPO_NAME" ]; then
            break
          fi
        done
    
        # Exporta a variável SHORT_REPO_NAME para o ambiente
        echo "SHORT_REPO_NAME=$SHORT_REPO_NAME" >> $GITHUB_ENV
    
    
    
    - name: Find, export, and store file paths dynamically
      shell: bash
      run: |
        # Inicializa o contador
        counter=1
        
        # Encontra todos os arquivos .properties e processa cada um
        for file in $(find . -name "*.properties"); do
          # Define uma variável dinâmica distN onde N é o valor do contador
          var_name="dist${counter}"
          
          # Exporta o caminho do arquivo para uma variável com o nome dinâmico
          echo "${var_name}=$file" >> $GITHUB_ENV
          echo "Exporting ${var_name} with value: $file"
          
          # Incrementa o contador
          counter=$((counter + 1))
          
          # Extrai todas as propriedades e exporta para o ambiente GitHub
          while IFS='=' read -r key value; do
            if [ -n "$key" ] && [ -n "$value" ]; then
              echo "Exporting property: ${key}=${value}"
              echo "${key}=${value}" >> $GITHUB_ENV
            fi
          done < "$file"
        done
        
        echo "All file paths have been exported."
    
    #- name: Use dist2 in another action
    #  run: |
    #    echo "Using dist2: ${{ env.dist2 }}"
    

    #- name: Combine and display extracted name and properties
    #  shell: bash
    #  run: |
    #   # Combine the extracted short repo name with properties
    #   combined_output="Centro de Custo: $SHORT_REPO_NAME"
    #   
    #   # Append all properties to the combined output
    #   for file in $(find . -name "*.properties"); do
    #     while IFS='=' read -r key value; do
    #     if [ -n "$key" ] && [ -n "$value" ]; then
    #       combined_output+="\n${key}=${value}"
    #     fi
    #     done < "$file"
    #   done
    #   
    #   # Display the combined output
    #   echo -e "$combined_output"
    #
